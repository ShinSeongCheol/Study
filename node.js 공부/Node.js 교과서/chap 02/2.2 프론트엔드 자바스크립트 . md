# 2.2 프론트 엔드 자바 스크립트
## AJAX
AJAX(Asynchronous Javascript And XML)은 비동기적 웹 서비스를 개발하기 위한 기법
### JSON을 사용해 데이터 받기
```
var xhr = new XMLHttpRequest();
xhr.onreadystatechange = function(){
    if(xhr.readyState === xhr.DONE){
        if(xhr.status === 200 || xhr.status === 201){
            console.log(xhr.responseText);
        }else{
            console.error(xhr.responseText);
        }
    }
}
xhr.open('GET', 'https://www.zerocho.com/api/get');
xhr.send();

var xhr = new XMLHttpRequest();
xhr.onlaod = function(){
    if(xhr.readyState === xhr.DONE){
        if(xhr.status === 200 || xhr.status === 201){
            console.log(xhr.responseText);
        }else{
            console.error(xhr.responseText);
        }
    }
}
xhr.open('GET', 'https://www.zerocho.com/api/get');
xhr.send();

var xhr = new XMLHttpRequest();
xhr.onerror = function(){
    if(xhr.readyState === xhr.DONE){
        if(xhr.status === 200 || xhr.status === 201){
            console.log(xhr.responseText);
        }else{
            console.error(xhr.responseText);
        }
    }
}
xhr.open('GET', 'https://www.zerocho.com/api/get');
xhr.send();
```
XMLHttpRequest()객체의 onreadystatechange, onload, onerror를 사용해서 JSON 데이터를 받을 수 있다.   
### POST를 이용해서 JSON데이터 보내기
```
var xhr = new XMLHttpRequest();
xhr.onreadystatechange = function() {
    if(xhr.readyState === xhr.DONE){
        if(xhr.status === 200 || xhr.status === 201){
            console.log(xhr.responseText);
        }else{
            console.error(xhr.responseText);
        }
    }
}
xhr.open('POST', 'https://www.zerocho.com/api/post/json');
xhr.setRequestHeader('Content-Type', 'application/json');
xhr.send(JSON.stringify(data));
```
xhr.setRequestHeader로 json형식을 지정함
xhr.send(JSON.stringify(data));로 데이터를 포함시켜 전송
### 한글로 된 주소는 encodeURIComponent를 이용해서 보냄
```
var xhr = new XMLHttpRequest();
xhr.onreadystatechange = function(){
    if(xhr.readyState === xhr.DONE){
        if(xhr.status === 200 || xhr.status === 201){
            console.log(xhr.responseText);
        }
        else{
            console.log(xhr.responseText);
        }
    }
};
xhr.open('GET', 'https://www.zerocho.com/api/search/' + encodeURIComponent('노드'));
xhr.send();
```
decodeURIComponent로 encodeURIComponent를 디코딩 할 수 있다.
### data attribute와 dataset
html 태그 속성으로 data-로 시작하는 속성을 넣어준다.
```
<ul>
    <li data-id="1" data-user-job="programmer">Zero</li>
    <li data-id="2" data-user-job="designer">Nero</li>
    <li data-id="3" data-user-job="programmer">Hero</li>
    <li data-id="4" data-user-job="ceo">Kero</li>
</ul>
```
document.querySelector('li').dataset을 하면 id와 userJob이 나온다.
document.querySelector('li').dataset.monthSalary를 하면 li태그에 속성 data-month-salary 가 추가된다.
